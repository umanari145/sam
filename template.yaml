AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app
  Sample SAM Template for sam-app

Globals:
  Function:
    Timeout: 5

Parameters:
  DbType:
    Type: String
  PostgresDbhost:
    Type: String
  PostgresDbname:
    Type: String
  PostgresDbuser:
    Type: String
  PostgresPassword:
    Type: String

Resources:
  # APIの設定
  SampleRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true

  # APIキーの設定
  SampleRestApiKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn: 
      - SampleRestApi
      - SampleRestApiProdStage
    Properties: 
      Enabled: true
      Name: !Sub 'api-key'
      StageKeys: 
        - RestApiId: 
            Ref: SampleRestApi
          StageName: Prod

  ApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: 
      - SampleRestApi
      - SampleRestApiProdStage
    Properties:
      ApiStages:
          - ApiId: !Ref SampleRestApi
            Stage: !Ref SampleRestApiProdStage
          # AWS::Serverless::Api のリソース名 + AWS::Serverless::Api の 'StageName' + Stage 
      #使用回数の制限      
      Throttle:
        BurstLimit: 200
        RateLimit: 100
      UsagePlanName: !Sub 'api-plan'

  ApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    DependsOn:
      - ApiUsagePlan
      - SampleRestApiKey
    Properties : 
      KeyId: !Ref SampleRestApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan

  # リソース名
  LambdaSampleFunction:
    # リソース種別(Lambdaはこの書き方)
    Type: AWS::Serverless::Function
    Properties:
      # 成果物のパス(ディレクトリまで)
      CodeUri: "./lambdaSample/"
      # ハンドラー
      Handler: main
      # Runtime
      Runtime: go1.x
      # 環境変数セット
      Environment:
        Variables:
          DB_TYPE: !Ref DbType
          POSTGRES_DBHOST: !Ref PostgresDbhost
          POSTGRES_DBNAME: !Ref PostgresDbname
          POSTGRES_DBUSER: !Ref PostgresDbuser
          POSTGRES_PASSWORD: !Ref PostgresPassword
      Events:
        # この設定だけでAPIgetewayが自動生成される
        Api:
            Type: Api
            Properties:
                Path: /area/{zipCode}
                Method: get
                # restAPIとの紐付け
                RestApiId: !Ref SampleRestApi
                Auth:
                  ApiKeyRequired: true

  # リソース名
  TriggerBySNSFunction:
    # リソース種別(Lambdaはこの書き方)
    Type: AWS::Serverless::Function
    Properties:
      # 成果物のパス(ディレクトリまで)
      CodeUri: "./triggerSNS/"
      # ハンドラー
      Handler: main
      # Runtime
      Runtime: go1.x
      # 環境変数セット

Outputs:
  LambdaSampleFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt LambdaSampleFunction.Arn
  LambdaSampleIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt LambdaSampleFunctionRole.Arn